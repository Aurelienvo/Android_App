apply plugin: 'com.android.application'

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "ch.epfl.fmottier.studenthealthmonitoring"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildTypes.each {
                project.ext.constants.each {
                        // Create module constants as both String constants and string resources
                        //    String constants used in Java as BuildConfig.k ("k" being the key used)
                        //    Resources are used as usual:
                        //         in Java as [getApplicationContext().]getString(R.string.a_key)
                        //         in XML as @string/app_name
                    k, v ->
                        it.buildConfigField 'String', k, "\"${v}\""
                        it.resValue 'string', k, v
                }
            }
        }
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
}

repositories {
    jcenter()
    maven {
        url 'https://maven.google.com'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support:design:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:26.+'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.google.firebase:firebase-auth:10.0.1'
    compile 'com.google.firebase:firebase-database:10.0.1'
    compile 'com.theartofdev.edmodo:android-image-cropper:2.4.3'
    compile 'com.google.firebase:firebase-storage:10.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.firebaseui:firebase-ui-database:1.1.1'
    compile 'id.zelory:compressor:2.0.0'
    testCompile 'junit:junit:4.12'
    compile 'com.google.android.gms:play-services-maps:10.0.1'
    compile 'com.google.maps.android:android-maps-utils:0.4+'
    compile 'io.ticofab.androidgpxparser:parser:1.1.0'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    compile 'com.android.support:cardview-v7:26.+'
    compile 'com.google.android.gms:play-services-wearable:10.0.1'

    compile 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0'

    wearApp project(':wear')
}
apply plugin: 'com.google.gms.google-services'